A. Next Round
time limit per test3 seconds
memory limit per test256 megabytes
inputstandard input
outputstandard output
"Contestant who earns a score equal to or greater than the k-th place finisher's score will advance to the next round, as long as the contestant earns a positive score..." — an excerpt from contest rules.

A total of n participants took part in the contest (n ≥ k), and you already know their scores. Calculate how many participants will advance to the next round.

Input
The first line of the input contains two integers n and k (1 ≤ k ≤ n ≤ 50) separated by a single space.

The second line contains n space-separated integers a1, a2, ..., an (0 ≤ ai ≤ 100), where ai is the score earned by the participant who got the i-th place. The given sequence is non-increasing (that is, for all i from 1 to n - 1 the following condition is fulfilled: ai ≥ ai + 1).

Output
Output the number of participants who advance to the next round.

Sample test(s)
input
8 5
10 9 8 7 7 7 5 5
output
6
input
4 2
0 0 0 0
output
0
Note
In the first example the participant on the 5th place earned 7 points. As the participant on the 6th place also earned 7 points, there are 6 advancers.

In the second example nobody got a positive score.

与其看别人的代码还不如我实现我的第二个想法！
我要总结我实际经验中发现的好方法，并且在以后的学习中坚持这些好的方法，而不是凭空设想一个方法，然后坚持，当然我设想的方法肯定是从实际出发的，但是我觉得所有的方法必须继续接受实践的检验，而且是哪个方法效果好，就要优先坚持那个方法

这里的方法是，一定要上传测试，测试成功就去看他人的代码从中去吸收！
这个方法对usaco的改进是，不要停留在解决了例子程序，还要上传代码，上传成功就去看网站的分析，根据分析写自己的代码，分析网站的代码，看nocow的分析，用自己的代码实现分析，分析nocow网站上的代码，整个这一串走下来，才会使自己得到最大的锻炼！这个方法体现的就是一步一个台阶地扎实向前推进！一直推进到最深入，我当前对usaco设计的学习方法最大的问题，没有做到最大可能的深入！每一步都浅尝辄止，这对我的成长不利，这也无法让我感受到更多编程的快乐与成就感！
一个问题不断地突破就能够把兴趣一直延续下去，这就是延续兴趣的方法，我以前只注重激发兴趣，忘记如何延续兴趣！
