我喜欢tutorial 2 简洁地给出答案！ 这个问题的思考价值大于代码编写价值！
通过奇数偶数分析可以把我以前的代码统一到这个公式！
if (M%2==0 && N%2==0) { printf("%d\n", (M/2)*(N/2)*2); }
M=2k N=2l
(M/2)*(N/2)*2=kl*2=M*N/2

else if(M%2==0 && N%2!=0) { printf("%d\n", (M/2)*(N/2)*2+M/2); }
M=2k N=2l+1
(M/2)*(N/2)*2+M/2=kl*2+k=k(2l+1)=M*N/2

else if(M%2!=0 && N%2==0) { printf("%d\n", (M/2)*(N/2)*2+N/2); }
M=2k+1 N=2l
(M/2)*(N/2)*2+N/2=kl*2+l=l(2k+1)=M*N/2

else { printf("%d\n", (M/2)*(N/2)*2+N/2+M/2); }
M=2k+1 N=2l+1
(M/2)*(N/2)*2+N/2+M/2=kl*2+l+k
因为N/2=l
=M*(N/2)
因为M/2=k
=N*(M/2)

都可以统一到M*N/2
